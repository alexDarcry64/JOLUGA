<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="bunifuElipse1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuButton1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAI0AAAAyCAYAAABhwlgFAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAOHSURBVHhe7Z2/axRBFMevtLS0uN1NaWlp6Z9gaSPYCCII
        sQxYWFgIyu1ukBSCiCBYCHaClZAqWF1hIaQQLA7B88ydmlyM3Fu/b3Yil9y789ZcLpfd74NPINmZ3cnN
        997Mm19bm5VFT7Mz9Ti7HMTZXSVMZAM0g0TaYZJlZD7kn7c03Wfv66KeyJUozs76qjpZix5l51Coa2Es
        b1HYPgrdPfxPkJMHddMLYtnNhSTLENCSr8L5mYolSuQ5CrGNQvywCkoWExWPqzN80aPV7Lyv0uMzdXFh
        I7uPh6py96xCkdOD80CJPFYn4Kt4tgbBXMIDvtRj1wyZhSCnjyAe/EaL8TVM5aqv6tkYOlI3w2TADm2J
        gUP4htbjoa/yoxlU+AR0rAeRcuH6OomsayTsq7+45VHRYMd6ACkn9cZgL0hl879CdPUwFEw1QXfkF+r/
        nZfCdIb27TYEs2XdkFQD5zBSeeElMdk0SmKnlyh+aGXFS8M2bcc0rLZuQKpJkGRd6OKCl8io6UBPHrfb
        NyAVBQGRl8hBy+eRpGdmIpVmrLdBp+dVPR5waoCYoBX64KWSG1S0lA/s2BkIQQi+pUGSl4zry9zAH7ft
        xIS4EFznqGIvGTeQ17QSEjIMnEvbCUbDbIjmp5WIkGEgmp5bg6NLAfUXKxEhwwSp9MNVuVPL1/PaiQg5
        TJTIy5r+sC4SYiNN7QRv2BcJsZAWmif5aF8kxEJ21NNwzQwphA7scYKSFEI9Tcu6QIiFOhmOBpNCuFFh
        htykGAi5oZwH9kVCDFJ5rSH3Mtg1ExAygqxxLQ0pwNCaGkZQZBrQlfn+d/dlvSH34G04XkMm4iYr9y1K
        5WKQCjfHkbHAy/R0GY2XTG6cgyKTkc7IwQD0NmQcuoUljOW6l8pB001RViZSbbQV8hIZNV3/qW7Iykgq
        S1dPbfUSsQ2qWgFcM0yyfPOkvPHSmGzcbUkcsbyf+lQsTagZzBuRSoCg6FPhUz/dgQDIaN2QlB35HE06
        XmSSuXmpVDb1HDb75qRsBEcRzL65piqRdZ6/V260D6sOYqYHUUM4ejQsB//KSVejpKk7vUVMp8X9dANf
        nFECdNYatP85DjML04dAmS2dxLIKQxYbfPH1kOlOmMotX6XzM/ceIbfGWPdOselacLr4kvd1qkhft3Qs
        TVFR06YLwlkD+QuquJ9qAcjrAh7lmbYOsxFKrfYHIWiDHbY3SYQAAAAASUVORK5CYII=
</value>
  </data>
</root>